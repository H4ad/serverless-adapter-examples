export const id=153;export const ids=[153];export const modules={5228:(e,r,o)=>{o.d(r,{b:()=>t});const t="4.2.1"},95721:(e,r,o)=>{o.d(r,{X:()=>n});var t=o(90398);function n(e){const r=e.getType("_Service");if(!(0,t.lp)(r))return!1;const o=r.getFields().sdl;if(!o)return!1;const n=o.type;return!!(0,t.KA)(n)&&"String"==n.name}},74153:(e,r,o)=>{o.r(r),o.d(r,{ApolloServerPluginSchemaReporting:()=>g});var t=o(22037),n=o(13321),i=o(52313),a=o(19655),s=o(26535),p=o(8530),l=o(36292),h=o(5228);class c{constructor(e){this.headers={"Content-Type":"application/json","x-api-key":e.apiKey,"apollographql-client-name":"ApolloServerPluginSchemaReporting","apollographql-client-version":h.b},this.endpointUrl=e.endpointUrl||"https://schema-reporting.api.apollographql.com/api/graphql",this.schemaReport=e.schemaReport,this.coreSchema=e.coreSchema,this.isStopped=!1,this.logger=e.logger,this.initialReportingDelayInMs=e.initialReportingDelayInMs,this.fallbackReportingDelayInMs=e.fallbackReportingDelayInMs,this.fetcher=e.fetcher??l.default}stopped(){return this.isStopped}start(){this.pollTimer=setTimeout((()=>this.sendOneReportAndScheduleNext(!1)),this.initialReportingDelayInMs)}stop(){this.isStopped=!0,this.pollTimer&&(clearTimeout(this.pollTimer),this.pollTimer=void 0)}async sendOneReportAndScheduleNext(e){if(this.pollTimer=void 0,!this.stopped())try{const r=await this.reportSchema(e);if(!r)return;return void(this.stopped()||(this.pollTimer=setTimeout((()=>this.sendOneReportAndScheduleNext(r.withCoreSchema)),1e3*r.inSeconds)))}catch(e){this.logger.error(`Error reporting server info to Apollo during schema reporting: ${e}`),this.stopped()||(this.pollTimer=setTimeout((()=>this.sendOneReportAndScheduleNext(!1)),this.fallbackReportingDelayInMs))}}async reportSchema(e){const{data:r,errors:o}=await this.apolloQuery({report:this.schemaReport,coreSchema:e?this.coreSchema:null});if(o)throw new Error(o.map((e=>e.message)).join("\n"));function t(e){return["Unexpected response shape from Apollo when","reporting schema. If this continues, please reach","out to support@apollographql.com.","Received response:",JSON.stringify(e)].join(" ")}if(!r||!r.reportSchema)throw new Error(t(r));if("ReportSchemaResponse"===r.reportSchema.__typename)return r.reportSchema;if("ReportSchemaError"===r.reportSchema.__typename)return this.logger.error(["Received input validation error from Apollo:",r.reportSchema.message,"Stopping reporting. Please fix the input errors."].join(" ")),this.stop(),null;throw new Error(t(r))}async apolloQuery(e){const r={query:"mutation SchemaReport($report: SchemaReport!, $coreSchema: String) {\n  reportSchema(report: $report, coreSchema: $coreSchema) {\n    __typename\n    ... on ReportSchemaError {\n      message\n      code\n    }\n    ... on ReportSchemaResponse {\n      inSeconds\n      withCoreSchema\n    }\n  }\n}\n",variables:e},o=await this.fetcher(this.endpointUrl,{method:"POST",headers:this.headers,body:JSON.stringify(r)});if(!o.ok)throw new Error([`An unexpected HTTP status code (${o.status}) was`,"encountered during schema reporting."].join(" "));try{return await o.json()}catch(e){throw new Error(["Couldn't report schema to Apollo.","Parsing response as JSON failed.","If this continues please reach out to support@apollographql.com",e].join(" "))}}}var m=o(95721),d=o(8460);function g({initialDelayMaxMs:e,overrideReportedSchema:r,endpointUrl:o,fetcher:l}=Object.create(null)){const g=(0,i.Z)();return(0,n.U)({__internal_plugin_id__:"SchemaReporting",__is_disabled_plugin__:!1,async serverWillStart({apollo:n,schema:i,logger:u}){const{key:S,graphRef:f}=n;if(!S)throw Error("To use ApolloServerPluginSchemaReporting, you must provide an Apollo API key, via the APOLLO_KEY environment variable or via `new ApolloServer({apollo: {key})`");if(!f)throw Error("To use ApolloServerPluginSchemaReporting, you must provide your graph ref (eg, 'my-graph-id@my-graph-variant'). Try setting the APOLLO_GRAPH_REF environment variable or passing `new ApolloServer({apollo: {graphRef}})`.");if(r)try{const e=(0,a.F)((0,s.I)(r,{noLocation:!0}));if(e.length)throw new Error(e.map((e=>e.message)).join("\n"))}catch(e){throw new Error(`The schema provided to overrideReportedSchema failed to parse or validate: ${e.message}`)}if((0,m.X)(i))throw Error(["Schema reporting is not yet compatible with Apollo Federation subgraphs.","If you're interested in using schema reporting with subgraphs,","please contact Apollo support. To set up managed federation, see","https://go.apollo.dev/s/managed-federation"].join(" "));void 0!==o&&u.info(`Apollo schema reporting: schema reporting URL override: ${o}`);const R={bootId:g,graphRef:f,platform:process.env.APOLLO_SERVER_PLATFORM||"local",runtimeVersion:`node ${process.version}`,userVersion:process.env.APOLLO_SERVER_USER_VERSION,serverId:process.env.APOLLO_SERVER_ID||process.env.HOSTNAME||t.hostname(),libraryVersion:`@apollo/server@${h.b}`};let v;return{schemaDidLoadOrUpdate({apiSchema:t,coreSupergraphSdl:n}){if(void 0!==r){if(v)return;u.info("Apollo schema reporting: schema to report has been overridden")}const i=r??n??(0,p.t3)(t),a=(0,d.n)(i),s={...R,coreSchemaHash:a};v?.stop(),v=new c({schemaReport:s,coreSchema:i,apiKey:S,endpointUrl:o,logger:u,initialReportingDelayInMs:Math.floor(Math.random()*(e??1e4)),fallbackReportingDelayInMs:2e4,fetcher:l}),v.start(),u.info(`Apollo schema reporting: reporting a new schema to Studio! See your graph at https://studio.apollographql.com/graph/${encodeURI(f)}/ with server info ${JSON.stringify(s)}`)},async serverWillStop(){v?.stop()}}}})}},8460:(e,r,o)=>{o.d(r,{n:()=>n});var t=o(15743);function n(e){return(0,t.createHash)("sha256").update(e).digest("hex")}}};